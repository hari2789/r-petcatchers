do local ScriptHub={};local HasInitialized=false;local Notification=loadstring(game:HttpGet("https://raw.githubusercontent.com/Jxereas/UI-Libraries/main/notification_gui_library.lua",true))();local Library=loadstring(game:HttpGet("https://raw.githubusercontent.com/vyworn/ui-libraries/main/discord-library.lua"))();local PlaceId=game.PlaceId;local JobId=game.JobId;local Player=game.Players.LocalPlayer;local Character=Player.Character;local PlayerId=Player.UserId;local HumanoidRootPart=Character:FindFirstChild("HumanoidRootPart");local PrimaryPart=Character.PrimaryPart;local PrimaryCFrame=PrimaryPart.CFrame;local Api="https://games.roblox.com/v1/games/";local Http=game:GetService("HttpService");local TeleportService=game:GetService("TeleportService");local CoreGui=game:GetService("CoreGui");local ReplicatedStorage=game:GetService("ReplicatedStorage");local Shared=ReplicatedStorage:WaitForChild("Shared");local Framework=Shared:WaitForChild("Framework");local Network=Framework:WaitForChild("Network");local Remote=Network:WaitForChild("Remote");local RemoteEvent=Remote:WaitForChild("Event");local RemoteFunction=Remote:WaitForChild("Function");local VirtualUser=game:GetService("VirtualUser");local TicketAmount;local Toggles={RespawnKingSlime=false,RespawnKraken=false,RespawnHyperCore=false,KingSlimeFight=false,KrakenFight=false,HyperCoreFight=false,MaxLevelKingSlime=false,MaxLevelKraken=false,MaxLevelHyperCore=false,ClawGameInput=false,StartClaw=false,CubeDrop=false,OpenEggs=false,BuyAuburnShop=false,BuyGemTrader=false,BuyMagicShop=false,BuyBlackMarket=false,BuyPrizeCounter=false,UseAllShrines=false,AllowNotifications=false,AllowExchange=false,CoinExchange=false,AutoCraft1=false,AutoCraft2=false,AutoCraft3=false,SellFish=false,BuyTrophyPet=false};local Intervals={KingSlimeInterval=1,KingSlimeIntervalUpdated=false,KrakenInterval=1,KrakenIntervalUpdated=false,HyperCoreInterval=1,HyperCoreIntervalUpdated=false};local Levels={KingSlime=25,Kraken=25,HyperCore=25,KingSlimeLevelUpdated=false,KrakenLevelUpdated=false,HyperCoreLevelUpdated=false,MaxLevel=1000};local Crafting={CraftingItem1="coin-elixir",CraftingItemAmount1=1,CraftingItemUpdated1=false,CraftingItemAmountUpdated1=false,CraftingItem2="coin-elixir",CraftingItemAmount2=1,CraftingItemUpdated2=false,CraftingItemAmountUpdated2=false,CraftingItem3="coin-elixir",CraftingItemAmount3=1,CraftingItemUpdated3=false,CraftingItemAmountUpdated3=false};local Keybinds={ToggleScript=Enum.KeyCode.M};local Information={Script="3.0.0",Game="1.3.2",Developers="Av & Hari"};local Users={MintedAv={164011583,"75e17f39-7b1a-4de3-8c4f-9cdc1538ada1"},hari2789={85087803,"36ca18b2-4d4f-476b-86bf-6a0d4f82ce63"},marciwnl={57061551,"23566c2b-8201-4d19-a218-7fd36334aa12"},Exarchal={63808833,"5a1196d4-91ff-4c8b-82e9-9c94cd007803"},Timelesscorch={118140207,"a8e4203e-8db8-4361-90e0-9f6280f27e7d"},Niflheiim={572111037,"6f2ec97e-5ed2-46e6-a888-d1db99a23116"}};local DeveloperIds={MintedAv=164011583,hari2789=85087803,Niflheiim=572111037};local SelectedItem="Coin Elixir";local ItemAmount=1;local ItemDuration;local SelectedEgg="Mystery Egg";local ExchangeAmount=1;local PetId;local Verified=false;local ExchangeSlider;local coroutines={openEggs={},maxLevelHyperCore={},hyperCoreFight={},respawnHyperCore={},maxLevelKraken={},krakenFight={},respawnKraken={},maxLevelKingSlime={},kingSlimeFight={},respawnKingSlime={},clawGameInput={},startClawGame={},cubeDrop={},buyPrizeCounter={},autoCraft1={},autoCraft2={},autoCraft3={},sellFish={},buyTrophyPet={},coinExchangeCoroutine={}};local RunClawGame=false;local Event={{"Egg Merchant",{1173.0238037109375,12.287543296813965,1736.5169677734375}},{"Black Market",{1379.1,294.2, -796.4}},{"Prize Counter",{1393.397,4.1, -1711.917}},{"Easter Leaderboard",{1267.291015625,12.289215087890625,1738.359130859375}},{"Event Pass",{1278.4912109375,12.289225578308105,1725.61181640625}}};local HyperwaveArcade={{"Hyperwave Arcade",{1395.4,4.1, -1682.3}},{"Prize Counter",{1393.397,4.1, -1711.917}},{"Talents",{1290.3967,9.1, -1570.146}},{"Rune Ravager",{1297.35,4, -1698.38}},{"Exchange",{1410.584,4, -1644.03}},{"Hyperwave Arcade Fishing",{1362.8128,3.9999, -1551.5799}},{"Robot Claw",{1347.2463,3.9999, -1639.8745}},{"Hyper Core",{1290.1,4.1, -1651.6}}};local MagmaBasin={{"The Summit",{1321.3,189.1, -643}},{"Magma Basin",{1705.2,82.1, -454.2}},{"Black Market",{1379.1,294.2, -796.4}},{"Magma Basin Fishing",{1266.3256,186.4094, -497.7903}}};local GloomyGrotto={{"Gloomy Grotto",{1601,51.7, -65.3}},{"Dance Champion",{1573,51.6, -151.1}},{"Magic Shop",{1675.4,52, -15.5}},{"Groomy Grotto Fishing",{1568.8243,51.5991, -107.6174}}};local DustyDunes={{"Dusty Dunes",{1775.3,51.6,287.1}},{"Archeologist",{1845.9,51.6,268.2}},{"Dusty Dunes Fishing",{1800.1712,51.3891,83.3962}}};local SunsetShores={{"Sunset Shores",{1306.3,40.2,582.5}},{"Gem Trader",{1336,40.6,579.2}},{"Sell Fish",{1323.7,40.3,562.3}},{"Old Sailor",{1318.3,40.3,633.8}},{"Sunset Shores Fishing",{1314.0639,40.3469,627.3519}},{"Kraken",{1218.1,41.4,408.5}}};local FrostyPeaks={{"Frosty Peaks",{934.175,39.988,585.324}},{"Bruh Bounty",{1023.3,40.7,587.3}},{"Frosty Peaks Fishing",{969.1971,39.988,712.5382}}};local AuburnWoods={{"Auburn Woods",{779,24.2,1128.4}},{"Auburn Shop",{787.1,24.8,1063.4}},{"Crafter",{824.7,24.6,1108.5}},{"Auburn Woods Fishing",{711.3388,24.2196,1133.6851}},{"King Slime",{696.1,24.3,1216}}};local MellowMeadows={{"Mellow Meadows",{969.1,24.2,1443.4}},{"Mellow Meadows Fishing",{1013.6784,24.2199,1403.6992}}};local PetPark={{"Pet Park",{1201.2,12.3,1666.9}},{"Pet Park Fishing",{1181.9278,12.1865,1578.8575}}};local Shrines={"elixir","book","cherry","rune","better-cube","radioactive","ticket","gem","egg","berry","cube"};local Shops={"the-blackmarket","magic-shop","gem-trader","auburn-shop"};local ShopNames={"Black Market","Magic Shop","Gem Trader","Auburn Shop"};local OptionsPage1={"Coin Elixir","Token Elixir","XP Elixir","Sea Elixir","Lucky Elixir","Super Lucky Elixir"};local OptionsPage2={"Gamer Elixir","Timeful Tome","Prismatic Sundae"};local CraftingOptions={"Rare Cube","Epic Cube","Legendary Cube","Mystery Egg","Elite Mystery Egg","Coin Elixir","XP Elixir","Sea Elixir","Token Elixir"};local CraftingOptionValues={["Rare Cube"]="rare-cube",["Epic Cube"]="epic-cube",["Legendary Cube"]="legendary-cube",["Mystery Egg"]="mystery-egg",["Elite Mystery Egg"]="elite-mystery-egg",["Coin Elixir"]="coin-elixir",["XP Elixir"]="xp-elixir",["Sea Elixir"]="sea-elixir",["Token Elixir"]="token-elixir"};local EggOptions={"Mystery Egg","Elite Mystery Egg"};local ValidAmounts={45,38,25,23,20,15,10,9,6,5,4,3,2,1};local function BuyTrophyPet() while Toggles.BuyTrophyPet do local success,response=pcall(function() RemoteEvent:FireServer("PurchaseOneTimePrize","trophy");RemoteEvent:FireServer("PurchaseOneTimePrize","trophy-pet");end);task.wait(1);end end local function AntiAFK() Player.Idled:connect(function() VirtualUser:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame);task.wait(1);VirtualUser:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame);end);print("Anti Afk Is Now On");end local function TeleportToPosition(x,y,z) Character=Player.Character;if Character then local pos=Vector3.new(x,y,z);Character:SetPrimaryPartCFrame(CFrame.new(pos));else warn("Character not found.");end end local function JoinPublicServer() local Servers=Api   .. PlaceId   .. "/servers/Public?sortOrder=Asc&limit=10" ;function ListServers(cursor) local Raw=game:HttpGet(Servers   .. ((cursor and ("&cursor="   .. cursor)) or "") );return Http:JSONDecode(Raw);end local Servers=ListServers();local Server=Servers.data[math.random(1, #Servers.data)];TeleportService:TeleportToPlaceInstance(PlaceId,Server.id,Player);end local function RejoinGame() TeleportService:Teleport(PlaceId,Player);end local function LeaveGame() if Player then Player:Kick("Left game via hub");end end local function RespawnBoss(boss) local success,response=pcall(function() RemoteEvent:FireServer("RespawnBoss",boss);end);if  not success then warn("Error while respawning boss: "   .. response );end end local function RespawnKingSlime() while Toggles.RespawnKingSlime do local ActiveInterval=Intervals.KingSlimeInterval;local CurrentInterval=ActiveInterval;while ActiveInterval>0  do if (ActiveInterval==CurrentInterval) then RespawnBoss("king-slime");end task.wait(1);if  not Toggles.RespawnKingSlime then local ActiveInterval=Intervals.KingSlimeInterval;local InactiveInterval=Intervals.KingSlimeInterval;local CurrentInterval=ActiveInterval;print("King Slime Auto Respawn: Off");return;end ActiveInterval=ActiveInterval-1 ;if Intervals.KingSlimeIntervalUpdated then local NewInterval=Intervals.KingSlimeInterval;if (NewInterval~=ActiveInterval) then ActiveInterval=NewInterval;CurrentInterval=ActiveInterval;Intervals.KingSlimeIntervalUpdated=false;print("King Slime Interval Updated");end end end task.wait(1);if (ActiveInterval==0) then local InactiveInterval=Intervals.KingSlimeInterval;while InactiveInterval>0  do task.wait(1);if  not Toggles.RespawnKingSlime then local InactiveInterval=Intervals.KingSlimeInterval;local CurrentInterval=ActiveInterval;print("King Slime Auto Respawn: Off");return;end InactiveInterval=InactiveInterval-1 ;if Intervals.KingSlimeIntervalUpdated then local NewInterval=Intervals.KingSlimeInterval;if (NewInterval~=InactiveInterval) then InactiveInterval=NewInterval;CurrentInterval=InactiveInterval;Intervals.KingSlimeIntervalUpdated=false;print("King Slime Interval Updated");end end end task.wait(1);end end end local function RespawnKraken() while Toggles.RespawnKraken do local ActiveInterval=Intervals.KrakenInterval;local CurrentInterval=ActiveInterval;while ActiveInterval>0  do if (ActiveInterval==CurrentInterval) then RespawnBoss("the-kraken");end task.wait(1);if  not Toggles.RespawnKraken then local ActiveInterval=Intervals.KrakenInterval;local InactiveInterval=Intervals.KrakenInterval;local CurrentInterval=ActiveInterval;print("Kraken Auto Respawn: Off");return;end ActiveInterval=ActiveInterval-1 ;if Intervals.KrakenIntervalUpdated then local NewInterval=Intervals.KrakenInterval;if (NewInterval~=ActiveInterval) then ActiveInterval=NewInterval;CurrentInterval=ActiveInterval;Intervals.KrakenIntervalUpdated=false;print("Kraken Interval Updated");end end end task.wait(1);if (ActiveInterval==0) then local InactiveInterval=Intervals.KrakenInterval;while InactiveInterval>0  do task.wait(1);if  not Toggles.RespawnKraken then local InactiveInterval=Intervals.KrakenInterval;local CurrentInterval=ActiveInterval;print("Kraken Auto Respawn: Off");return;end InactiveInterval=InactiveInterval-1 ;if Intervals.KrakenIntervalUpdated then local NewInterval=Intervals.KrakenInterval;if (NewInterval~=InactiveInterval) then InactiveInterval=NewInterval;CurrentInterval=InactiveInterval;Intervals.KrakenIntervalUpdated=false;print("Kraken Interval Updated");end end end task.wait(1);end end end local function RespawnHyperCore() while Toggles.RespawnHyperCore do local ActiveInterval=Intervals.HyperCoreInterval;local CurrentInterval=ActiveInterval;while ActiveInterval>0  do if (ActiveInterval==CurrentInterval) then RespawnBoss("hyper-core");end task.wait(1);if  not Toggles.RespawnHyperCore then local ActiveInterval=Intervals.HyperCoreInterval;local InactiveInterval=Intervals.HyperCoreInterval;local CurrentInterval=ActiveInterval;print("Hyper Core Auto Respawn: Off");return;end ActiveInterval=ActiveInterval-1 ;if Intervals.HyperCoreIntervalUpdated then local NewInterval=Intervals.HyperCoreInterval;if (NewInterval~=ActiveInterval) then ActiveInterval=NewInterval;CurrentInterval=ActiveInterval;Intervals.HyperCoreIntervalUpdated=false;print("Hyper Core Interval Updated");end end end task.wait(1);if (ActiveInterval==0) then local InactiveInterval=Intervals.HyperCoreInterval;while InactiveInterval>0  do task.wait(1);if  not Toggles.RespawnHyperCore then local InactiveInterval=Intervals.HyperCoreInterval;local CurrentInterval=ActiveInterval;print("Hyper Core Auto Respawn: Off");return;end InactiveInterval=InactiveInterval-1 ;if Intervals.HyperCoreIntervalUpdated then local NewInterval=Intervals.HyperCoreInterval;if (NewInterval~=InactiveInterval) then InactiveInterval=NewInterval;CurrentInterval=InactiveInterval;Intervals.HyperCoreIntervalUpdated=false;print("Hyper Core Interval Updated");end end end task.wait(1);end end end local function FightBoss(boss,level) local success,response=pcall(function() RemoteFunction:InvokeServer("BossRequest",boss,level);end);if  not success then warn("Error while starting boss fight: "   .. response );end end local function FightKingSlime() while Toggles.KingSlimeFight do local CurrentLevel=Levels.KingSlime;if Levels.KingSlimeLevelUpdated then CurrentLevel=Levels.KingSlime;Levels.KingSlimeLevelUpdated=false;FightBoss("king-slime",CurrentLevel);else FightBoss("king-slime",CurrentLevel);end end end local function FightMaxKingSlime() while Toggles.MaxLevelKingSlime do FightBoss("king-slime",Levels.MaxLevel);end end local function FightKraken() while Toggles.KrakenFight do local CurrentLevel=Levels.Kraken;if Levels.KrakenLevelUpdated then CurrentLevel=Levels.Kraken;Levels.KrakenLevelUpdated=false;FightBoss("the-kraken",CurrentLevel);else FightBoss("the-kraken",CurrentLevel);end end end local function FightMaxKraken() while Toggles.MaxLevelKraken do FightBoss("the-kraken",Levels.MaxLevel);end end local function FightHyperCore() while Toggles.HyperCoreFight do local CurrentLevel=Levels.HyperCore;if Levels.HyperCoreLevelUpdated then CurrentLevel=Levels.HyperCore;Levels.HyperCoreLevelUpdated=false;FightBoss("hyper-core",CurrentLevel);else FightBoss("hyper-core",CurrentLevel);end end end local function FightMaxHyperCore() while Toggles.MaxLevelHyperCore do FightBoss("hyper-core",Levels.MaxLevel);end end local function SellFish() while Toggles.SellFish do local success,response=pcall(function() RemoteEvent:FireServer("SellFish");end);task.wait();end end local function ClawGameInput() while Toggles.ClawGameInput do local success,response=pcall(function() RemoteEvent:FireServer("TryMinigameInput",true);end);task.wait();end end local function StartClawGame() if  not Verified then return;end local UpdatedTicketAmount;local TicketsCheck;local CurrentTickets;local CheckTickets;local CheckTicketsAmount;local UpdateTickets;local NewTickets;while RunClawGame do UpdatedTicketAmount=require(ReplicatedStorage.Client.Framework.Services.LocalData).Get()['GoldenTickets'];TicketsCheck=UpdatedTicketAmount;CurrentTickets=UpdatedTicketAmount;if (TicketsCheck<1) then if Toggles.AllowNotifications then local Depleted=Notification.new("warning","Golden Tickets Depleted","You have no more Golden Tickets left.");task.wait(3);Depleted:delete();end task.wait();break;end if  not RunClawGame then break;end if  not Toggles.StartClaw then break;end while Toggles.StartClaw do CheckTickets=require(ReplicatedStorage.Client.Framework.Services.LocalData).Get()['GoldenTickets'];CheckTicketsAmount=CheckTickets;if (CheckTicketsAmount<1) then if Toggles.AllowNotifications then local Depleted=Notification.new("warning","Golden Tickets Depleted","You have no more Golden Tickets left.");task.wait(3);Depleted:delete();end break;end if  not RunClawGame then break;end if  not Toggles.StartClaw then break;end while CheckTicketsAmount>0  do if  not RunClawGame then break;end if  not Toggles.StartClaw then break;end UpdateTickets=require(ReplicatedStorage.Client.Framework.Services.LocalData).Get()['GoldenTickets'];NewTickets=UpdateTickets;local success,response=pcall(function() RemoteFunction:InvokeServer("MinigameRequest","robot-claw",PetId);end);if (NewTickets<CurrentTickets) then CurrentTickets=NewTickets;if Toggles.AllowNotifications then local Started=Notification.new("info","Claw Minigame Started","Golden Tickets: "   .. tostring(CurrentTickets) );task.wait(3);Started:delete();end TeleportToPosition(1362.8128,3.9999, -1551.5799);task.wait();elseif (NewTickets>CurrentTickets) then local Gained=NewTickets-CurrentTickets ;CurrentTickets=NewTickets;if Toggles.AllowNotifications then local Earned=Notification.new("info","Golden Tickets Earned: "   .. tostring(Gained) ,"Total Tickets: "   .. tostring(CurrentTickets) );task.wait(3);Earned:delete();end task.wait();end task.wait();end task.wait();end task.wait();end end local function GetTickets() local UpdatedTicketAmount=require(ReplicatedStorage.Client.Framework.Services.LocalData).Get()['GoldenTickets'];local Tickets=UpdatedTicketAmount;local Current=Notification.new("info","Inventory","Golden Tickets: "   .. tostring(Tickets) );task.wait(3);Current:delete();end local function AutoCoinExchange(amount) while Toggles.CoinExchange do local success,response=pcall(function() RemoteEvent:FireServer("CoinExchange",amount);end);task.wait(1);end end local function RuneExchange(exchange) if Toggles.AllowExchange then local success,response=pcall(function() RemoteEvent:FireServer("RuneExchange",exchange);end);else warn("Exchange is disabled.");end end local function UseItem(item) RemoteEvent:FireServer("UsePowerup",item);end local function UseItemAsync(item,amount) local itemsCoroutines={};for i=1,amount do local co=coroutine.wrap(UseItem);table.insert(itemsCoroutines,co);co(item);task.wait();end for _,co in ipairs(itemsCoroutines) do co:cancel();end end local function OpenEggs(egg) while Toggles.OpenEggs do local success,response=pcall(function() RemoteFunction:InvokeServer("TryHatchEgg",egg);end);if  not success then warn("Failed to open: ",egg,"Error:",response);end task.wait(1);end end local function UseShrine(shrine) local success,response=pcall(function() RemoteEvent:FireServer("UseShrine",shrine);end);if  not success then warn("Failed to use: ",shrine,"Error:",response);end end local function UseAllShrinesAsync() while Toggles.UseAllShrines do for _,shrine in ipairs(Shrines) do coroutine.wrap(UseShrine)(shrine);task.wait();end end end local function BuyItem(shopServerName,index,amount) local success,response=pcall(function() RemoteEvent:FireServer("BuyShopItem",shopServerName,index,amount);end);if  not success then warn("Failed to buy from "   .. shopServerName   .. " with index "   .. index   .. " and amount "   .. amount   .. ": "   .. response );end task.wait();end local function BuyFromShop(shopName,shopServerName) while Toggles["Buy"   .. shopName:gsub(" ","") ] do if Toggles["Buy"   .. shopName:gsub(" ","") ] then for _,index in ipairs({1,2,3,4}) do if  not Toggles["Buy"   .. shopName:gsub(" ","") ] then break;end for _,amount in ipairs(ValidAmounts) do if  not Toggles["Buy"   .. shopName:gsub(" ","") ] then break;end BuyItem(shopServerName,index,amount);task.wait();end task.wait();end else break;end task.wait();end end local function BuyPrizeCounter() while Toggles.BuyPrizeCounter do for _,amount in ipairs(ValidAmounts) do coroutine.wrap(BuyItem)("prize-counter",1,amount);task.wait();end end end local function AutoCubeDrop() while Toggles.CubeDrop do if  not Toggles.CubeDrop then break;end RemoteFunction:InvokeServer("PlayCubeDrop");task.wait();end end local function AutoCraftOne() while Toggles.AutoCraft1 do local CurrentItem=Crafting.CraftingItem1;local CurrentAmount=Crafting.CraftingItemAmount1;if  not Toggles.AutoCraft1 then break;end if Crafting.CraftingItemUpdated1 then CurrentItem=Crafting.CraftingItem1;Crafting.CraftingItemUpdated1=false;end if Crafting.CraftingItemAmountUpdated1 then CurrentAmount=Crafting.CraftingItemAmount1;Crafting.CraftingItemAmountUpdated1=false;end local success,response=pcall(function() RemoteEvent:FireServer("StartCrafting",1,tostring(CurrentItem),tonumber(CurrentAmount));RemoteEvent:FireServer("ClaimCrafting",1);end);if  not success then warn("Failed to craft: "   .. CurrentItem   .. " in slot 1" ,"Error:",response);end task.wait(1);end end local function AutoCraftTwo() while Toggles.AutoCraft2 do local CurrentItem=Crafting.CraftingItem2;local CurrentAmount=Crafting.CraftingItemAmount2;if  not Toggles.AutoCraft2 then break;end if Crafting.CraftingItemUpdated2 then CurrentItem=Crafting.CraftingItem2;Crafting.CraftingItemUpdated2=false;end if Crafting.CraftingItemAmountUpdated2 then CurrentAmount=Crafting.CraftingItemAmount2;Crafting.CraftingItemAmountUpdated2=false;end local success,response=pcall(function() RemoteEvent:FireServer("StartCrafting",2,tostring(CurrentItem),tonumber(CurrentAmount));RemoteEvent:FireServer("ClaimCrafting",2);end);if  not success then warn("Failed to craft: "   .. CurrentItem   .. " in slot 2" ,"Error:",response);end task.wait(1);end end local function AutoCraftThree() while Toggles.AutoCraft3 do local CurrentItem=Crafting.CraftingItem3;local CurrentAmount=Crafting.CraftingItemAmount3;if  not Toggles.AutoCraft3 then break;end if Crafting.CraftingItemUpdated3 then CurrentItem=Crafting.CraftingItem3;Crafting.CraftingItemUpdated3=false;end if Crafting.CraftingItemAmountUpdated3 then CurrentAmount=Crafting.CraftingItemAmount3;Crafting.CraftingItemAmountUpdated3=false;end local success,response=pcall(function() RemoteEvent:FireServer("StartCrafting",3,tostring(CurrentItem),tonumber(CurrentAmount));RemoteEvent:FireServer("ClaimCrafting",3);end);if  not success then warn("Failed to craft: "   .. CurrentItem   .. " in slot 3" ,"Error:",response);end task.wait(1);end end local function CreateTeleportButtons(channel,TeleportData) if TeleportData then for _,data in ipairs(TeleportData) do local position=data[2];local x,y,z=tonumber(position[1]),tonumber(position[2]),tonumber(position[3]);if (x and y and z) then channel:Button(data[1],function() TeleportToPosition(x,y,z);end);else warn("Invalid position data:",position);end end else warn("Teleport data is nil. Unable to create teleport buttons.");end end local isDeveloper=false;for _,id in pairs(DeveloperIds) do if (id==PlayerId) then isDeveloper=true;break;end end ScriptHub.Gui=function(self) if HasInitialized then local Window=Library:Window("Main Hub");local Hub=Window:Server("Main","http://www.roblox.com/asset/?id=16810601979");local Main=Hub:Channel("Main");Main:Seperator();Main:Label("Version: v"   .. Information.Script );Main:Label("Game Version: v"   .. Information.Game );Main:Label("Developers: "   .. Information.Developers );Main:Bind("Toggle UI, click to change",Keybinds.ToggleScript,function() game.CoreGui.DiscordLib.MainFrame.Visible= not game.CoreGui.DiscordLib.MainFrame.Visible;end);Main:Seperator();Main:Button("Anti AFK",function() AntiAFK();end);Main:Button("Join Public Server",function() JoinPublicServer();end);Main:Button("Rejoin Game",function() RejoinGame();end);Main:Button("Leave Game",function() LeaveGame();end);Main:Seperator();local AutoFarm=Hub:Channel("Auto Farm");AutoFarm:Seperator();AutoFarm:Dropdown("Egg",EggOptions,function(value) SelectedEgg=value;end);AutoFarm:Toggle("Open Eggs",Toggles.OpenEggs,function(state) Toggles.OpenEggs=state;if state then coroutines.openEggs=coroutine.create(function() OpenEggs(SelectedEgg);end);coroutine.resume(coroutines.openEggs);task.wait();else if coroutines.openEggs then coroutine.yield(coroutines.openEggs);coroutines.openEggs=nil;end task.wait();end end);AutoFarm:Seperator();AutoFarm:Toggle("Auto Buy Trophy Pet",Toggles.BuyTrophyPet,function(state) Toggles.BuyTrophyPet=state;if state then coroutines.buyTrophyPet=coroutine.create(function() BuyTrophyPet();end);coroutine.resume(coroutines.buyTrophyPet);task.wait();else if coroutines.buyTrophyPet then coroutine.yield(coroutines.buyTrophyPet);coroutines.buyTrophyPet=nil;end task.wait();end end);AutoFarm:Toggle("Auto Sell Fish",Toggles.SellFish,function(state) Toggles.SellFish=state;if state then coroutines.sellFish=coroutine.create(function() SellFish();end);coroutine.resume(coroutines.sellFish);task.wait();else if coroutines.sellFish then coroutine.yield(coroutines.sellFish);coroutines.sellFish=nil;end task.wait();end end);AutoFarm:Toggle("Use All Shrines",Toggles.UseAllShrines,function(state) Toggles.UseAllShrines=state;if state then coroutines.useAllShrines=coroutine.create(function() UseAllShrinesAsync();end);coroutine.resume(coroutines.useAllShrines);task.wait();else if coroutines.useAllShrines then coroutine.yield(coroutines.useAllShrines);coroutines.useAllShrines=nil;end task.wait();end end);for i,shopServerName in ipairs(Shops) do local shopName=ShopNames[i];AutoFarm:Toggle("Auto Buy "   .. shopName ,Toggles["Buy"   .. shopName:gsub(" ","") ],function(state) Toggles["Buy"   .. shopName:gsub(" ","") ]=state;if state then coroutines[shopName]=coroutine.create(function() BuyFromShop(shopName,shopServerName);end);coroutine.resume(coroutines[shopName]);task.wait();else if coroutines[shopName] then coroutine.yield(coroutines[shopName]);coroutines[shopName]=nil;end task.wait();end end);task.wait();end AutoFarm:Toggle("Auto Buy Golden Tickets",Toggles.BuyPrizeCounter,function(state) Toggles.BuyPrizeCounter=state;if state then coroutines.buyPrizeCounter=coroutine.create(function() BuyPrizeCounter();end);coroutine.resume(coroutines.buyPrizeCounter);task.wait();else if coroutines.buyPrizeCounter then coroutine.yield(coroutines.buyPrizeCounter);coroutines.buyPrizeCounter=nil;end task.wait();end end);AutoFarm:Seperator();local Bosses=Hub:Channel("Bosses");Bosses:Seperator();Bosses:Toggle("Auto Fight Max Level Hyper Core",Toggles.MaxLevelHyperCore,function(state) Toggles.MaxLevelHyperCore=state;if state then coroutines.maxLevelHyperCore=coroutine.create(function() FightMaxHyperCore();end);coroutine.resume(coroutines.maxLevelHyperCore);task.wait();else if coroutines.maxLevelHyperCore then coroutine.yield(coroutines.maxLevelHyperCore);coroutines.maxLevelHyperCore=nil;end task.wait();end end);Bosses:Toggle("Auto Fight Hyper Core",Toggles.HyperCoreFight,function(state) Toggles.HyperCoreFight=state;if state then coroutines.hyperCoreFight=coroutine.create(function() FightHyperCore();end);coroutine.resume(coroutines.hyperCoreFight);task.wait();else if coroutines.hyperCoreFight then coroutine.yield(coroutines.hyperCoreFight);coroutines.hyperCoreFight=nil;end task.wait();end end);Bosses:Toggle("Respawn Hyper Core",Toggles.RespawnHyperCore,function(state) Toggles.RespawnHyperCore=state;if state then print("Hyper Core Auto Respawn: On");coroutines.respawnHyperCore=coroutine.create(function() RespawnHyperCore();end);coroutine.resume(coroutines.respawnHyperCore);task.wait();else if coroutines.respawnHyperCore then coroutine.yield(coroutines.respawnHyperCore);coroutines.respawnHyperCore=nil;end task.wait();end end);Bosses:Textbox("Interval","Default: 1 second",false,function(value) Intervals.HyperCoreInterval=tonumber(value);Intervals.HyperCoreIntervalUpdated=true;end);Bosses:Textbox("Level","Default: Level 25",false,function(value) Levels.HyperCore=tonumber(value);Levels.HyperCoreLevelUpdated=true;end);Bosses:Seperator();Bosses:Toggle("Auto Fight Max Level Kraken",Toggles.MaxLevelKraken,function(state) Toggles.MaxLevelKraken=state;if state then coroutines.maxLevelKraken=coroutine.create(function() FightMaxKraken();end);coroutine.resume(coroutines.maxLevelKraken);task.wait();else if coroutines.maxLevelKraken then coroutine.yield(coroutines.maxLevelKraken);coroutines.maxLevelKraken=nil;end task.wait();end end);Bosses:Toggle("Auto Fight Kraken",Toggles.KrakenFight,function(state) Toggles.KrakenFight=state;if state then coroutines.krakenFight=coroutine.create(function() FightKraken();end);coroutine.resume(coroutines.krakenFight);task.wait();else if coroutines.krakenFight then coroutine.yield(coroutines.krakenFight);coroutines.krakenFight=nil;end task.wait();end end);Bosses:Toggle("Respawn Kraken",Toggles.RespawnKraken,function(state) Toggles.RespawnKraken=state;if state then print("Kraken Auto Respawn: On");coroutines.respawnKraken=coroutine.create(function() RespawnKraken();end);coroutine.resume(coroutines.respawnKraken);task.wait();else if coroutines.respawnKraken then coroutine.yield(coroutines.respawnKraken);coroutines.respawnKraken=nil;end task.wait();end end);Bosses:Textbox("Interval","Default: 1 second",false,function(value) Intervals.KrakenInterval=tonumber(value);Intervals.KrakenIntervalUpdated=true;end);Bosses:Textbox("Level","Default: Level 25",false,function(value) Levels.Kraken=tonumber(value);Levels.KrakenLevelUpdated=true;end);Bosses:Seperator();Bosses:Toggle("Auto Fight Max Level King Slime",Toggles.MaxLevelKingSlime,function(state) Toggles.MaxLevelKingSlime=state;if state then coroutines.maxLevelKingSlime=coroutine.create(function() FightMaxKingSlime();end);coroutine.resume(coroutines.maxLevelKingSlime);task.wait();else if coroutines.maxLevelKingSlime then coroutine.yield(coroutines.maxLevelKingSlime);coroutines.maxLevelKingSlime=nil;end task.wait();end end);Bosses:Toggle("Auto Fight King Slime",Toggles.KingSlimeFight,function(state) Toggles.KingSlimeFight=state;if state then coroutines.kingSlimeFight=coroutine.create(function() FightKingSlime();end);coroutine.resume(coroutines.kingSlimeFight);task.wait();else if coroutines.kingSlimeFight then coroutine.yield(coroutines.kingSlimeFight);coroutines.kingSlimeFight=nil;end task.wait();end end);Bosses:Toggle("Respawn King Slime",Toggles.RespawnKingSlime,function(state) Toggles.RespawnKingSlime=state;if state then print("King Slime Auto Respawn: On");coroutines.respawnKingSlime=coroutine.create(function() RespawnKingSlime();end);coroutine.resume(coroutines.respawnKingSlime);task.wait();else if coroutines.respawnKingSlime then coroutine.yield(coroutines.respawnKingSlime);coroutines.respawnKingSlime=nil;end task.wait();end end);Bosses:Textbox("Interval","Default: 1 second",false,function(value) Intervals.KingSlimeInterval=tonumber(value);Intervals.KingSlimeIntervalUpdated=true;end);Bosses:Textbox("Level","Default: Level 25",false,function(value) Levels.KingSlime=tonumber(value);Levels.KingSlimeLevelUpdated=true;end);Bosses:Seperator();local Minigames=Hub:Channel("Minigames");Minigames:Seperator();Minigames:Toggle("Auto Play Claw Game",Toggles.StartClaw,function(state) Toggles.StartClaw=state;Toggles.ClawGameInput=Toggles.StartClaw;if Toggles.StartClaw then RunClawGame=true;coroutines.startClawGame=coroutine.create(function() StartClawGame();end);coroutine.resume(coroutines.startClawGame);task.wait();else if coroutines.startClawGame then RunClawGame=false;coroutine.yield(coroutines.startClawGame);coroutines.startClawGame=nil;end task.wait();end if Toggles.ClawGameInput then coroutines.clawGameInput=coroutine.create(function() ClawGameInput();end);coroutine.resume(coroutines.clawGameInput);task.wait();else if coroutines.clawGameInput then coroutine.yield(coroutines.clawGameInput);coroutines.clawGameInput=nil;end task.wait();end end);Minigames:Toggle("Auto Cube Drop",Toggles.CubeDrop,function(state) Toggles.CubeDrop=state;if state then coroutines.cubeDrop=coroutine.create(function() AutoCubeDrop();end);coroutine.resume(coroutines.cubeDrop);task.wait();else if coroutines.cubeDrop then coroutine.yield(coroutines.cubeDrop);coroutines.cubeDrop=nil;end task.wait();end end);Minigames:Toggle("Allow Notifications",Toggles.AllowNotifications,function(state) Toggles.AllowNotifications=state;end);Minigames:Button("Teleport to Claw Game",function() TeleportToPosition(1347.2463,3.9999, -1639.8745);end);Minigames:Button("Get Golden Tickets",function() GetTickets();end);for _,userData in pairs(Users) do local user=userData[1];if (PlayerId==user) then Verified=true;PetId=userData[2];Minigames:Label("Pet Id: "   .. PetId );break;end end Minigames:Seperator();local Teleports=Hub:Channel("Teleports");Teleports:Seperator();Teleports:Label("Event");CreateTeleportButtons(Teleports,Event);Teleports:Label("Hyperwave Arcade");CreateTeleportButtons(Teleports,HyperwaveArcade);Teleports:Label("Magma Basin");CreateTeleportButtons(Teleports,MagmaBasin);Teleports:Label("Gloomy Grotto");CreateTeleportButtons(Teleports,GloomyGrotto);Teleports:Label("Dusty Dunes");CreateTeleportButtons(Teleports,DustyDunes);Teleports:Label("Sunset Shores");CreateTeleportButtons(Teleports,SunsetShores);Teleports:Label("Frosty Peaks");CreateTeleportButtons(Teleports,FrostyPeaks);Teleports:Label("Auburn Woods");CreateTeleportButtons(Teleports,AuburnWoods);Teleports:Label("Mellow Meadows");CreateTeleportButtons(Teleports,MellowMeadows);Teleports:Label("Pet Park");CreateTeleportButtons(Teleports,PetPark);Teleports:Seperator();local Items=Hub:Channel("Items");Items:Seperator();Items:Button("Use Item",function() UseItemAsync(SelectedItem,ItemAmount);end);Items:Textbox("Amount","Type here",false,function(value) ItemAmount=tonumber(value);end);Items:Dropdown("Page 1",OptionsPage1,function(value) SelectedItem=value;end);Items:Dropdown("Page 2",OptionsPage2,function(value) SelectedItem=value;end);Items:Seperator();Items:Button("Use Prismatic Tome",function() UseItem("Prismatic Tome");end);Items:Button("Use Prismatic Elixir",function() UseItem("Prismatic Elixir");end);Items:Seperator();local Craft=Hub:Channel("Crafting");Craft:Seperator();Craft:Label("Select amount and item first then toggle.");Craft:Label("Default is Coin Elixir and 1x");Craft:Seperator();Craft:Toggle("Auto Craft Slot 1",Toggles.AutoCraft1,function(state) Toggles.AutoCraft1=state;if state then coroutines.autoCraft1=coroutine.create(function() AutoCraftOne();end);coroutine.resume(coroutines.autoCraft1);task.wait();else if coroutines.autoCraft1 then coroutine.yield(coroutines.autoCraft1);coroutines.autoCraft1=nil;end task.wait();end end);Craft:Textbox("Amount","Type here",false,function(value) Crafting.CraftingItemAmount1=tonumber(value);Crafting.CraftingItemAmountUpdated1=true;task.wait(1);end);Craft:Dropdown("Item 1",CraftingOptions,function(value) local actualName=CraftingOptionValues[value];Crafting.CraftingItem1=actualName;Crafting.CraftingItemUpdated1=true;task.wait(1);end);Craft:Toggle("Auto Craft Slot 2",Toggles.AutoCraft2,function(state) Toggles.AutoCraft2=state;if state then coroutines.autoCraft2=coroutine.create(function() AutoCraftTwo();end);coroutine.resume(coroutines.autoCraft2);task.wait();else if coroutines.autoCraft2 then coroutine.yield(coroutines.autoCraft2);coroutines.autoCraft2=nil;end task.wait();end end);Craft:Textbox("Amount","Type here",false,function(value) Crafting.CraftingItemAmount2=tonumber(value);Crafting.CraftingItemAmountUpdated2=true;end);Craft:Dropdown("Item 2",CraftingOptions,function(value) local actualName=CraftingOptionValues[value];Crafting.CraftingItem2=actualName;Crafting.CraftingItemUpdated2=true;end);Craft:Toggle("Auto Craft Slot 3",Toggles.AutoCraft3,function(state) Toggles.AutoCraft3=state;if state then coroutines.autoCraft3=coroutine.create(function() AutoCraftThree();end);coroutine.resume(coroutines.autoCraft3);task.wait();else if coroutines.autoCraft3 then coroutine.yield(coroutines.autoCraft3);coroutines.autoCraft3=nil;end task.wait();end end);Craft:Textbox("Amount","Type here",false,function(value) Crafting.CraftingItemAmount3=tonumber(value);Crafting.CraftingItemAmountUpdated3=true;end);Craft:Dropdown("Item 3",CraftingOptions,function(value) local actualName=CraftingOptionValues[value];Crafting.CraftingItem3=actualName;Crafting.CraftingItemUpdated3=true;end);Craft:Seperator();local Exchange=Hub:Channel("Exchange");Exchange:Seperator();Exchange:Button("Set Exchange to 99",function() ExchangeSlider:Change(99);end);ExchangeSlider=Exchange:Slider("Exchange Amount",1,99,1,function(value) ExchangeAmount=tonumber(value);end);Exchange:Toggle("Auto Coin Exchange",Toggles.CoinExchange,function(state) Toggles.CoinExchange=state;if state then coroutines.coinExchangeCoroutine=coroutine.create(function() AutoCoinExchange(ExchangeAmount);end);coroutine.resume(coroutines.coinExchangeCoroutine);task.wait();else if coroutines.coinExchangeCoroutine then coroutine.yield(coroutines.coinExchangeCoroutine);coroutines.coinExchangeCoroutine=nil;end task.wait();end end);Exchange:Toggle("Allow Exchanging",Toggles.AllowExchange,function(state) Toggles.AllowExchange=state;end);Exchange:Label("Cost: 3x Looting, 3x Shrine Runes");Exchange:Button("3x - Super Lucky Elixir",function() RuneExchange(1);end);Exchange:Label("Cost: 3x Lifesteal, 3x Deadly Runes");Exchange:Button("1x - Respawn Tome",function() RuneExchange(2);end);Exchange:Label("Cost: 1x Gamer Rune");Exchange:Button("2x - Golden Ticket",function() RuneExchange(3);end);Exchange:Label("Cost: 1x Gamer Rune");Exchange:Button("1x - Gamer Elixir",function() RuneExchange(4);end);Exchange:Label("Cost: 1x Seafarer Rune");Exchange:Button("3x - Sea Elixir",function() RuneExchange(5);end);Exchange:Label("Cost: 1x High Roller Rune");Exchange:Button("1000x - Elite Mystery Egg",function() RuneExchange(6);end);Exchange:Label("Cost: 10x Lifesteal, 10x Looting, 10x Shrine, 2x High Roller Runes");Exchange:Button("1x - Prismatic Sundae",function() RuneExchange(7);end);Exchange:Label("Cost: 5x Shrine, 5x Lifesteal");Exchange:Button("2x - Knowledge Scroll",function() RuneExchange(8);end);Exchange:Seperator();local Hubs=Hub:Channel("Hubs");Hubs:Seperator();Hubs:Label("Auto Quest");Hubs:Button("GatoHub Auto Bruh Quests",function() local AutoBruh="https://raw.githubusercontent.com/Catto-YFCN/GatoHub/main/Quests/GatoHub_AutoBruh";loadstring(game:HttpGet(AutoBruh))();end);Hubs:Button("GatoHub Auto Sailor Quests",function() local AutoSailor="https://raw.githubusercontent.com/Catto-YFCN/GatoHub/main/Quests/GatoHub_AutoSailor";loadstring(game:HttpGet(AutoSailor))();end);Hubs:Label("Script Hubs");Hubs:Button("Gato Hub",function() local GatoHub="https://raw.githubusercontent.com/Catto-YFCN/GatoHub/main/PetCatchers";loadstring(game:HttpGet(GatoHub))();end);Hubs:Button("Gato Hub Beta",function() local GatoHubBeta="https://raw.githubusercontent.com/Catto-YFCN/GatoHub/main/PetCatchersBETA";loadstring(game:HttpGet(GatoHubBeta))();end);Hubs:Button("Huge Games Hub",function() local HugeGamesHub="https://api.luarmor.net/files/v3/loaders/f38c17c4a5e9f38a7dac14ce0940688d.lua";loadstring(game:HttpGet(HugeGamesHub))();end);Hubs:Button("Lenut Hub",function() local LenutHub="https://raw.githubusercontent.com/lenutjr/pc/main/petcatchers";loadstring(game:HttpGet(LenutHub))();end);Hubs:Seperator();if isDeveloper then local LoggedPositionX,LoggedPositionY,LoggedPositionZ;local function GetPosition() if (Character and HumanoidRootPart) then local position=HumanoidRootPart.Position;LoggedPositionX,LoggedPositionY,LoggedPositionZ=position.X,position.Y,position.Z;setclipboard(tostring(LoggedPositionX)   .. ", "   .. tostring(LoggedPositionY)   .. ", "   .. tostring(LoggedPositionZ) );return LoggedPositionX,LoggedPositionY,LoggedPositionZ;else if  not Character then warn("Character not found for player:",Player.Name);end if  not HumanoidRootPart then warn("HumanoidRootPart not found for player:",Player.Name);end return nil,nil,nil;end end local function TeleportToLoggedPosition() if (LoggedPositionX and LoggedPositionY and LoggedPositionZ) then TeleportToPosition(LoggedPositionX,LoggedPositionY,LoggedPositionZ);else warn("Logged position is not set.");end end local Tools=Hub:Channel("Tools");Tools:Seperator();Tools:Button("Anti AFK",function() AntiAFK();end);Tools:Button("Remote Spy",function() loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/SimpleSpyV3/main.lua"))();end);Tools:Button("Infinite Yield",function() loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))();end);Tools:Seperator();Tools:Button("Join Public Server",function() JoinPublicServer();end);Tools:Button("Rejoin Game",function() RejoinGame();end);Tools:Button("Leave Game",function() LeaveGame();end);Tools:Seperator();Tools:Button("Get Position",function() print(GetPosition());end);Tools:Button("Teleport to Position",function() TeleportToLoggedPosition();end);Tools:Seperator();Tools:Button("Copy Player ID",function() setclipboard(tostring(PlayerId));end);Tools:Button("Copy Place ID",function() setclipboard(tostring(PlaceId));end);Tools:Button("Copy Job ID",function() setclipboard(tostring(JobId));end);Tools:Label("Player ID: "   .. tostring(PlayerId) );Tools:Label("Place ID: "   .. tostring(PlaceId) );Tools:Label("Job ID: "   .. tostring(JobId) );Tools:Seperator();end else warn("Hub has not been initialized.");end HasInitialized=false;end;ScriptHub.Init=function(self) if  not HasInitialized then print("Initializing...");HasInitialized=true;ScriptHub:Gui();task.wait(1);TeleportToPosition(1395.4,4.1, -1682.3);AntiAFK();print("Done initializing");task.wait(5);TicketAmount=require(ReplicatedStorage.Client.Framework.Services.LocalData).Get()['GoldenTickets'];else warn("PetCatchersHub has already been initialized");end end;ScriptHub:Init(); end
